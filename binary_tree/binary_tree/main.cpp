#include <iostream>
#include <vector>
#include "binary_tree.h"
#include "search_treeh.h"
using namespace std;
int main()
{
	SearchTree st;
	for (int i = 0; i < 100; i++)
	{
		st.addNode(rand() % 100, st.GetRoot());
	}
	vector<int> nodes = st.getTreeKeysVector(st.GetRoot());
	for (int i = 0; i < nodes.size(); i++)
	{
		cout << nodes[i] << " ";
	}
	cout << "\n";
	//st.PrintTree(st.GetRoot(), 5);
	for (int i = 1 ; i < nodes.size(); i++)
	{
		st.deleteStNode(st.GetRoot(),nodes[i]);
	}
	st.deleteStNode(st.GetRoot(), 41);
	cout << st.isEmpty();

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
